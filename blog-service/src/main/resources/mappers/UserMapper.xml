<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wei.blogservice.mappers.UserMapper">

    <resultMap id="RoleMap" type="com.wei.blogservice.entity.Role">
        <id column="role_id" jdbcType="INTEGER" property="roleId" javaType="java.lang.Integer"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName" javaType="java.lang.String"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.wei.blogservice.entity.User">
        <!--
        column是表中的字段名。
        property是对应的java属性。
        jdbcType: 数据库中字段类型，它与Java中属性类型有对应关系，详情看下表。
        id：数据库主键字段。
        result：普通字段。
       -->
        <id column="user_id" jdbcType="INTEGER" property="userId" javaType="java.lang.Integer"/>
        <result column="username" jdbcType="CHAR" property="username" javaType="java.lang.String"/>
        <result column="account" jdbcType="VARCHAR" property="account" javaType="java.lang.String"/>
        <result column="password" jdbcType="CHAR" property="password" javaType="java.lang.String"/>
        <result column="about_me" jdbcType="VARCHAR" property="aboutMe" javaType="java.lang.String"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday" javaType="java.util.Date"/>
        <result column="avatar" jdbcType="CHAR" property="avatar" javaType="java.lang.String"/>
        <result column="motto" jdbcType="VARCHAR" property="motto" javaType="java.lang.String"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" javaType="java.util.Date"/>
        <collection ofType="com.wei.blogservice.entity.Role" resultMap="RoleMap" property="roles"  javaType="java.util.List"/>
    </resultMap>

    <select id="getUserByUsername" resultMap="BaseResultMap" >
        select user_id, username, account, password, about_me, birthday, avatar, motto, created_at
        FROM user
        WHERE
        username = #{username}
    </select>

    <select id="getSecurityUserByUsername" resultMap="BaseResultMap" >
        select u.user_id, u.username, u.password, r.role_id, r.role_name
        FROM user u
             left join user_role as ur
                       on u.user_id = ur.user_id
             left join tbl.role as r
                       on ur.role_id = r.role_id
        WHERE
            u.username = #{username}
    </select>

    <select id="getLoginUserByUsername" resultMap="BaseResultMap" >
        select user_id, username, password
        FROM user
        WHERE
        username = #{username}
    </select>

    <select id="isUsernameExist" resultType="java.lang.Integer">
        select count(1)
        from
            user
        where
            username = #{username}
    </select>

    <insert id="createUser"  useGeneratedKeys="true" keyProperty="id" parameterType="com.wei.blogservice.entity.LoginUser">
        insert into user(username, password, avatar) values (#{loginUser.username}, #{loginUser.password}, #{loginUser.avatar});
    </insert>

    <insert id="addDefaultRoleToUser">
        insert into user_role values (#{id}, #{roleId})
    </insert>

</mapper>